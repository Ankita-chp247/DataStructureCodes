
class Linkedlist {
	struct node{
		int data;
		struct node *next
	};
struct node *head;

void beginsert ();   
void lastinsert ();  
void randominsert();  
void begin_delete();  
void last_delete();  
void random_delete();  
void display();  
void search();  

public static void main(String args[]) {     
	              int choise = 0;
	            		  while (choise!=6) {
	            printf("\n\n*********Main Menu*********\n");  
	            printf("\nChoose one option from the following list ...\n");  
	            printf("\n===============================================\n");  
	 printf("\n1.Insert in begining\\n2.Insert at last\\n3.Delete from Beginning\n4.Delete from last\n5.Delete node after specified location\n6.Search ");  
	 printf("\nEnter your choice?\n");         
                }
	            		 switch (choice) {
	            		 case 1;
	            		 beginsert();
	            		 break;
	            		 
	            		 case 2;
	            		 lastinsert();
	            		 break;
	            		 
	            		 case 3;
	            		 begin_delete();
	            		 break;
	            		 
	            		 case 4;
	            		 last_delete();
	            		 break;
	            		 
	            		 case 5;
	            		 dispaly();
	            		 break;
	            		 
	            		 case 6;
	            		 search();
	            		 break;
	            		 
	            		 default ;
	            		 println("please enter valid choise")
	            		 
	            		 }
	            		 
}           
	}
               void beginsert()
               
               {
            	   struct node *ptr;
            	   int item
            	   ptr=(struct node *)malloc(sizeof(struct node *));
            	   if(ptr==null) {
            		   printf(\noverflow);
            	   }
            	   
            	    else  
            	    {  
            	        printf("\nEnter value\n");     
            	        ptr->data = item;  
            	        ptr->next = head;  
            	        head = ptr;  
            	        printf("\nNode inserted");  
            	    }  
               }
               
               void lastinsert()
               {
            	   struct node *ptr,*temp;  
            	    int item;     
            	    ptr = (struct node*)malloc(sizeof(struct node));      
            	    if(ptr == NULL)  
            	    {  
            	        printf("\nOVERFLOW");     
            	    }  
            	    else  
            	    {  
            	        printf("\nEnter value?\n");  
            	        ptr->data = item;  
            	        if(head == NULL)  
            	        {  
            	            ptr -> next = NULL;  
            	            head = ptr;  
            	            printf("\nNode inserted");  
            	        }  
            	        else  
            	        {  
            	            temp = head;  
            	            while (temp -> next != NULL)  
            	            {  
            	                temp = temp -> next;  
            	            }  
            	            temp->next = ptr;  
            	            ptr->next = NULL;  
            	            printf("\nNode inserted");  
            	          
            	        }  
            	    }  
            	    
            	    void last_delete()  
            	    {  
            	        struct node *ptr;  
            	        if(head == NULL)  
            	        {  
            	            printf("\nlist is empty");  
            	        }  
            	        else if(head -> next == NULL)  
            	        {  
            	            head = NULL;  
            	            free(head);  
            	            printf("\nOnly node of the list deleted ...\n");  
            	        }  
            	              
            	        else  
            	        {  
            	            ptr = head;   
            	            while(ptr->next != NULL)  
            	            {  
            	                ptr1 = ptr;  
            	                ptr = ptr ->next;  
            	            }  
            	            ptr1->next = NULL;  
            	            free(ptr);  
            	            printf("\nDeleted Node from the last ...\n");  
            	        }     
            	    }  
            	    
            	    void search()  
            	    {  
            	        struct node *ptr;  
            	        int item,i=0,flag;  
            	        ptr = head;   
            	        if(ptr == NULL)  
            	        {  
            	            printf("\nEmpty List\n");  
            	        }  
            	        else  
            	        {   
            	            printf("\nEnter item which you want to search?\n");   
            	          
            	            while (ptr!=NULL)  
            	            {  
            	                if(ptr->data == item)  
            	                {  
            	                    printf("item found at location %d ",i+1);  
            	                    flag=0;  
            	                }   
            	                else  
            	                {  
            	                    flag=1;  
            	                }  
            	                i++;  
            	                ptr = ptr -> next;  
            	            }  
            	            if(flag==1)  
            	            {  
            	                printf("Item not found\n");  
            	            }  
            	        }     
            	              
            	    }  
            	      
            	    void display()  
            	    {  
            	        struct node *ptr;  
            	        ptr = head;   
            	        if(ptr == NULL)  
            	        {  
            	            printf("Nothing to print");  
            	        }  
            	        else  
            	        {  
            	            printf("\nprinting values . . . . .\n");   
            	            while (ptr!=NULL)  
            	            {  
            	                printf("\n%d",ptr->data);  
            	                ptr = ptr -> next;  
            	            }  

            	}  

               }
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
